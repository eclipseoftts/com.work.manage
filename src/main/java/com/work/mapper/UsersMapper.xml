<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.work.model.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="grades" jdbcType="INTEGER" property="grades" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name ,password,grades
  </sql>
  
  <!--    ====================用户登录=============================     -->
  
  <select id="findUsers" resultMap="BaseResultMap" parameterType="java.lang.String">
  		select <include refid="Base_Column_List"/> from t_users where name = #{name,jdbcType=VARCHAR}
  </select>
  
<!-- ============================查询所有的用户====================================================== -->  
  <select id="findUserAll" resultMap="BaseResultMap" >
  		select <include refid="Base_Column_List"/> from t_users  
  		LIMIT 0,10
  </select>
  
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.work.model.Users">
    insert into t_users (id, name, password, grades
     )
      values (#{id,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, 
      #{grades,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.work.model.Users">
    insert into t_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="grades != null">
        grades,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="grades != null">
        #{grades,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.work.model.Users">
    update t_users
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="grades != null">
        grades = #{grades,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.work.model.Users">
    update t_users
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      grades = #{grades,jdbcType=INTEGER},
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>